{"version":3,"file":"message_drawer.min.js","sources":["../src/message_drawer.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Controls the message drawer.\n *\n * @module     core_message/message_drawer\n * @copyright  2018 Ryan Wyllie <ryan@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(\n[\n    'jquery',\n    'core/custom_interaction_events',\n    'core/pubsub',\n    'core_message/message_drawer_view_contact',\n    'core_message/message_drawer_view_contacts',\n    'core_message/message_drawer_view_conversation',\n    'core_message/message_drawer_view_group_info',\n    'core_message/message_drawer_view_overview',\n    'core_message/message_drawer_view_search',\n    'core_message/message_drawer_view_settings',\n    'core_message/message_drawer_router',\n    'core_message/message_drawer_routes',\n    'core_message/message_drawer_events',\n    'core_message/message_drawer_helper',\n    'core/pending',\n    'core/drawer',\n    'core/toast',\n    'core/str',\n    'core/config',\n    'core/ajax',\n    'core/local/aria/focuslock',\n    'core/modal_backdrop',\n    'core/templates',\n    'core/local/aria/selectors',\n],\nfunction(\n    $,\n    CustomEvents,\n    PubSub,\n    ViewContact,\n    ViewContacts,\n    ViewConversation,\n    ViewGroupInfo,\n    ViewOverview,\n    ViewSearch,\n    ViewSettings,\n    Router,\n    Routes,\n    Events,\n    Helper,\n    Pending,\n    Drawer,\n    Toast,\n    Str,\n    Config,\n    Ajax,\n    FocusLock,\n    ModalBackdrop,\n    Templates,\n    AriaSelectors,\n) {\n\n    var SELECTORS = {\n        DRAWER: '[data-region=\"right-hand-drawer\"]',\n        JUMPTO: '.popover-region [data-region=\"jumpto\"]',\n        PANEL_BODY_CONTAINER: '[data-region=\"panel-body-container\"]',\n        PANEL_HEADER_CONTAINER: '[data-region=\"panel-header-container\"]',\n        VIEW_CONTACT: '[data-region=\"view-contact\"]',\n        VIEW_CONTACTS: '[data-region=\"view-contacts\"]',\n        VIEW_CONVERSATION: '[data-region=\"view-conversation\"]',\n        VIEW_GROUP_INFO: '[data-region=\"view-group-info\"]',\n        VIEW_OVERVIEW: '[data-region=\"view-overview\"]',\n        VIEW_SEARCH: '[data-region=\"view-search\"]',\n        VIEW_SETTINGS: '[data-region=\"view-settings\"]',\n        ROUTES: '[data-route]',\n        ROUTES_BACK: '[data-route-back]',\n        HEADER_CONTAINER: '[data-region=\"header-container\"]',\n        BODY_CONTAINER: '[data-region=\"body-container\"]',\n        FOOTER_CONTAINER: '[data-region=\"footer-container\"]',\n        CLOSE_BUTTON: '[data-action=\"closedrawer\"]'\n    };\n\n    /**\n     * Get elements for route.\n     *\n     * @param {String} namespace Unique identifier for the Routes\n     * @param {Object} root The message drawer container.\n     * @param {string} selector The route container.\n     *\n     * @return {array} elements Found route container objects.\n     */\n    var getParametersForRoute = function(namespace, root, selector) {\n\n        var header = root.find(SELECTORS.HEADER_CONTAINER).find(selector);\n        if (!header.length) {\n            header = root.find(SELECTORS.PANEL_HEADER_CONTAINER).find(selector);\n        }\n        var body = root.find(SELECTORS.BODY_CONTAINER).find(selector);\n        if (!body.length) {\n            body = root.find(SELECTORS.PANEL_BODY_CONTAINER).find(selector);\n        }\n        var footer = root.find(SELECTORS.FOOTER_CONTAINER).find(selector);\n\n        return [\n            namespace,\n            header.length ? header : null,\n            body.length ? body : null,\n            footer.length ? footer : null\n        ];\n    };\n\n    var routes = [\n        [Routes.VIEW_CONTACT, SELECTORS.VIEW_CONTACT, ViewContact.show, ViewContact.description],\n        [Routes.VIEW_CONTACTS, SELECTORS.VIEW_CONTACTS, ViewContacts.show, ViewContacts.description],\n        [Routes.VIEW_CONVERSATION, SELECTORS.VIEW_CONVERSATION, ViewConversation.show, ViewConversation.description],\n        [Routes.VIEW_GROUP_INFO, SELECTORS.VIEW_GROUP_INFO, ViewGroupInfo.show, ViewGroupInfo.description],\n        [Routes.VIEW_OVERVIEW, SELECTORS.VIEW_OVERVIEW, ViewOverview.show, ViewOverview.description],\n        [Routes.VIEW_SEARCH, SELECTORS.VIEW_SEARCH, ViewSearch.show, ViewSearch.description],\n        [Routes.VIEW_SETTINGS, SELECTORS.VIEW_SETTINGS, ViewSettings.show, ViewSettings.description]\n    ];\n\n    /**\n     * Create routes.\n     *\n     * @param {String} namespace Unique identifier for the Routes\n     * @param {Object} root The message drawer container.\n     */\n    var createRoutes = function(namespace, root) {\n        routes.forEach(function(route) {\n            Router.add(namespace, route[0], getParametersForRoute(namespace, root, route[1]), route[2], route[3]);\n        });\n    };\n\n    let backdropPromise = null;\n\n    /**\n     * Set the focus on the drawer.\n     *\n     * This method also creates or destroy any necessary backdrop zone and focus trap.\n     *\n     * @param {Object} root The message drawer container.\n     * @param {Boolean} hasFocus Whether the drawer has focus or not.\n     */\n    var setFocus = function(root, hasFocus) {\n        var drawerRoot = Drawer.getDrawerRoot(root);\n        if (!drawerRoot.length) {\n            return;\n        }\n        if (!backdropPromise) {\n            backdropPromise = Templates.render('core/modal_backdrop', {})\n                .then(html => new ModalBackdrop(html));\n        }\n        const backdropWithAdjustments = backdropPromise.then(modalBackdrop => {\n            const messageDrawerZIndex = window.getComputedStyle(drawerRoot[0]).zIndex;\n            if (messageDrawerZIndex) {\n                modalBackdrop.setZIndex(messageDrawerZIndex - 1);\n            }\n            modalBackdrop.getAttachmentPoint().get(0).addEventListener('click', e => {\n                PubSub.publish(Events.HIDE, {});\n                e.preventDefault();\n            });\n            return modalBackdrop;\n        });\n        if (hasFocus) {\n            FocusLock.trapFocus(root[0]);\n            // eslint-disable-next-line promise/catch-or-return\n            backdropWithAdjustments.then(modalBackdrop => {\n                if (modalBackdrop) {\n                    modalBackdrop.show();\n                    const pageWrapper = document.getElementById('page');\n                    pageWrapper.style.overflow = 'hidden';\n                    // Set the focus on the close button so when we press enter, it closes the drawer as it did before\n                    var closeButton = root.find(SELECTORS.CLOSE_BUTTON);\n                    if (closeButton.length) {\n                        closeButton.focus();\n                    }\n                }\n                return modalBackdrop;\n            });\n        } else {\n            // eslint-disable-next-line promise/catch-or-return\n            backdropWithAdjustments.then(modalBackdrop => {\n                if (modalBackdrop) {\n                    FocusLock.untrapFocus();\n                    var button = $(SELECTORS.DRAWER).attr('data-origin');\n                    if (button) {\n                        $('#' + button).focus();\n                    }\n                    modalBackdrop.hide();\n                    const pageWrapper = document.getElementById('page');\n                    pageWrapper.style.overflow = 'visible';\n                }\n                return modalBackdrop;\n            });\n        }\n    };\n    /**\n     * Show the message drawer.\n     *\n     * @param {string} namespace The route namespace.\n     * @param {Object} root The message drawer container.\n     */\n    var show = function(namespace, root) {\n        if (!root.attr('data-shown')) {\n            Router.go(namespace, Routes.VIEW_OVERVIEW);\n            root.attr('data-shown', true);\n        }\n\n        var drawerRoot = Drawer.getDrawerRoot(root);\n        if (drawerRoot.length) {\n            setFocus(root, true);\n            Drawer.show(drawerRoot);\n        }\n    };\n\n    /**\n     * Hide the message drawer.\n     *\n     * @param {Object} root The message drawer container.\n     */\n    var hide = function(root) {\n        var drawerRoot = Drawer.getDrawerRoot(root);\n        if (drawerRoot.length) {\n            setFocus(root, false);\n            Drawer.hide(drawerRoot);\n        }\n    };\n\n    /**\n     * Check if the drawer is visible.\n     *\n     * @param {Object} root The message drawer container.\n     * @return {boolean}\n     */\n    var isVisible = function(root) {\n        var drawerRoot = Drawer.getDrawerRoot(root);\n        if (drawerRoot.length) {\n            return Drawer.isVisible(drawerRoot);\n        }\n        return true;\n    };\n\n    /**\n     * Set Jump from button\n     *\n     * @param {String} buttonid The originating button id\n     */\n    var setJumpFrom = function(buttonid) {\n        $(SELECTORS.DRAWER).attr('data-origin', buttonid);\n    };\n\n    /**\n     * Listen to and handle events for routing, showing and hiding the message drawer.\n     *\n     * @param {string} namespace The route namespace.\n     * @param {Object} root The message drawer container.\n     * @param {bool} alwaysVisible Is this messaging app always shown?\n     */\n    var registerEventListeners = function(namespace, root, alwaysVisible) {\n        CustomEvents.define(root, [CustomEvents.events.activate, CustomEvents.events.escape]);\n        var paramRegex = /^data-route-param-?(\\d*)$/;\n\n        root.on(CustomEvents.events.activate, SELECTORS.ROUTES, function(e, data) {\n            var element = $(e.target).closest(SELECTORS.ROUTES);\n            var route = element.attr('data-route');\n            var attributes = [];\n\n            for (var i = 0; i < element[0].attributes.length; i++) {\n                attributes.push(element[0].attributes[i]);\n            }\n\n            var paramAttributes = attributes.filter(function(attribute) {\n                var name = attribute.nodeName;\n                var match = paramRegex.test(name);\n                return match;\n            });\n            paramAttributes.sort(function(a, b) {\n                var aParts = paramRegex.exec(a.nodeName);\n                var bParts = paramRegex.exec(b.nodeName);\n                var aIndex = aParts.length > 1 ? aParts[1] : 0;\n                var bIndex = bParts.length > 1 ? bParts[1] : 0;\n\n                if (aIndex < bIndex) {\n                    return -1;\n                } else if (bIndex < aIndex) {\n                    return 1;\n                } else {\n                    return 0;\n                }\n            });\n\n            var params = paramAttributes.map(function(attribute) {\n                return attribute.nodeValue;\n            });\n\n            var routeParams = [namespace, route].concat(params);\n\n            Router.go.apply(null, routeParams);\n\n            data.originalEvent.preventDefault();\n        });\n\n        root.on(CustomEvents.events.activate, SELECTORS.ROUTES_BACK, function(e, data) {\n            Router.back(namespace);\n\n            data.originalEvent.preventDefault();\n        });\n\n        // Close the message drawer if the drawer is visible and the click happened outside the drawer and the toggle button.\n        $(document).on(CustomEvents.events.activate, e => {\n            var drawer = $(e.target).closest(SELECTORS.DRAWER);\n            var toggleButtonId = $(SELECTORS.DRAWER)?.attr('data-origin');\n            var toggleButton = '';\n            if (toggleButtonId !== undefined && toggleButtonId) {\n                toggleButton = $(e.target).closest(\"#\" + toggleButtonId);\n            }\n\n            if (!drawer.length && !toggleButton.length && isVisible(root)) {\n                // Determine if the element that was clicked is focusable.\n                var focusableElement = $(e.target).closest(AriaSelectors.elements.focusable);\n                if (focusableElement.length) {\n                    // We need to move the focus to the clicked element after the drawer is hidden,\n                    // so we need to clear the `data-origin` attribute first.\n                    $(SELECTORS.DRAWER).attr('data-origin', '');\n                }\n                // Hide the drawer.\n                hide(root);\n                // Move the focus to the clicked element if it is focusable.\n                if (focusableElement.length) {\n                    focusableElement.focus();\n                }\n            }\n        });\n\n        // These are theme-specific to help us fix random behat fails.\n        // These events target those events defined in BS3 and BS4 onwards.\n        root.on('hide.bs.collapse', '.collapse', function(e) {\n            var pendingPromise = new Pending();\n            $(e.target).one('hidden.bs.collapse', function() {\n                pendingPromise.resolve();\n            });\n        });\n\n        root.on('show.bs.collapse', '.collapse', function(e) {\n            var pendingPromise = new Pending();\n            $(e.target).one('shown.bs.collapse', function() {\n                pendingPromise.resolve();\n            });\n        });\n\n        $(SELECTORS.JUMPTO).focus(function() {\n            var firstInput = root.find(SELECTORS.CLOSE_BUTTON);\n            if (firstInput.length) {\n                firstInput.focus();\n            } else {\n                $(SELECTORS.HEADER_CONTAINER).find(SELECTORS.ROUTES_BACK).focus();\n            }\n        });\n\n        $(SELECTORS.DRAWER).focus(function() {\n            var button = $(this).attr('data-origin');\n            if (button) {\n                $('#' + button).focus();\n            }\n        });\n\n        if (!alwaysVisible) {\n            PubSub.subscribe(Events.SHOW, function() {\n                show(namespace, root);\n            });\n\n            PubSub.subscribe(Events.HIDE, function() {\n                hide(root);\n            });\n\n            PubSub.subscribe(Events.TOGGLE_VISIBILITY, function(buttonid) {\n                const buttonElement = document.getElementById(buttonid);\n                if (isVisible(root)) {\n                    hide(root);\n                    buttonElement?.setAttribute('aria-expanded', false);\n                    $(SELECTORS.JUMPTO).attr('tabindex', -1);\n                } else {\n                    show(namespace, root);\n                    buttonElement?.setAttribute('aria-expanded', true);\n                    setJumpFrom(buttonid);\n                    $(SELECTORS.JUMPTO).attr('tabindex', 0);\n                }\n            });\n            root.on(CustomEvents.events.escape, function() {\n                PubSub.publish(Events.HIDE, {});\n            });\n        }\n\n        PubSub.subscribe(Events.SHOW_CONVERSATION, function(args) {\n            setJumpFrom(args.buttonid);\n            show(namespace, root);\n            Router.go(namespace, Routes.VIEW_CONVERSATION, args.conversationid);\n        });\n\n        var closebutton = root.find(SELECTORS.CLOSE_BUTTON);\n        closebutton.on(CustomEvents.events.activate, function(e, data) {\n            data.originalEvent.preventDefault();\n            setFocus(root, false);\n            var button = $(SELECTORS.DRAWER).attr('data-origin');\n            if (button) {\n                $('#' + button).focus();\n            }\n            PubSub.publish(Events.TOGGLE_VISIBILITY, button);\n        });\n\n        PubSub.subscribe(Events.CREATE_CONVERSATION_WITH_USER, function(args) {\n            setJumpFrom(args.buttonid);\n            show(namespace, root);\n            Router.go(namespace, Routes.VIEW_CONVERSATION, null, 'create', args.userid);\n        });\n\n        PubSub.subscribe(Events.SHOW_SETTINGS, function() {\n            show(namespace, root);\n            Router.go(namespace, Routes.VIEW_SETTINGS);\n        });\n\n        PubSub.subscribe(Events.PREFERENCES_UPDATED, function(preferences) {\n            var filteredPreferences = preferences.filter(function(preference) {\n                return preference.type == 'message_entertosend';\n            });\n            var enterToSendPreference = filteredPreferences.length ? filteredPreferences[0] : null;\n\n            if (enterToSendPreference) {\n                var viewConversationFooter = root.find(SELECTORS.FOOTER_CONTAINER).find(SELECTORS.VIEW_CONVERSATION);\n                viewConversationFooter.attr('data-enter-to-send', enterToSendPreference.value);\n            }\n        });\n    };\n\n    /**\n     * Initialise the message drawer.\n     *\n     * @param {Object} root The message drawer container.\n     * @param {String} uniqueId Unique identifier for the Routes\n     * @param {bool} alwaysVisible Should we show the app now, or wait for the user?\n     * @param {Object} route\n     */\n    var init = function(root, uniqueId, alwaysVisible, route) {\n        root = $(root);\n        createRoutes(uniqueId, root);\n        registerEventListeners(uniqueId, root, alwaysVisible);\n\n        if (alwaysVisible) {\n            show(uniqueId, root);\n\n            if (route) {\n                var routeParams = route.params || [];\n                routeParams = [uniqueId, route.path].concat(routeParams);\n                Router.go.apply(null, routeParams);\n            }\n        }\n\n        // Mark the drawer as ready.\n        Helper.markDrawerReady();\n    };\n\n    return {\n        init: init,\n    };\n});\n"],"names":["define","$","CustomEvents","PubSub","ViewContact","ViewContacts","ViewConversation","ViewGroupInfo","ViewOverview","ViewSearch","ViewSettings","Router","Routes","Events","Helper","Pending","Drawer","Toast","Str","Config","Ajax","FocusLock","ModalBackdrop","Templates","AriaSelectors","SELECTORS","routes","VIEW_CONTACT","show","description","VIEW_CONTACTS","VIEW_CONVERSATION","VIEW_GROUP_INFO","VIEW_OVERVIEW","VIEW_SEARCH","VIEW_SETTINGS","createRoutes","namespace","root","forEach","route","add","selector","header","find","length","body","footer","getParametersForRoute","backdropPromise","setFocus","hasFocus","drawerRoot","getDrawerRoot","render","then","html","backdropWithAdjustments","modalBackdrop","messageDrawerZIndex","window","getComputedStyle","zIndex","setZIndex","getAttachmentPoint","get","addEventListener","e","publish","HIDE","preventDefault","trapFocus","document","getElementById","style","overflow","closeButton","focus","untrapFocus","button","attr","hide","go","isVisible","setJumpFrom","buttonid","init","uniqueId","alwaysVisible","events","activate","escape","paramRegex","on","data","element","target","closest","attributes","i","push","paramAttributes","filter","attribute","name","nodeName","test","sort","a","b","aParts","exec","bParts","aIndex","bIndex","params","map","nodeValue","routeParams","concat","apply","originalEvent","back","drawer","toggleButtonId","_$","toggleButton","undefined","focusableElement","elements","focusable","pendingPromise","one","resolve","firstInput","this","subscribe","SHOW","TOGGLE_VISIBILITY","buttonElement","setAttribute","SHOW_CONVERSATION","args","conversationid","CREATE_CONVERSATION_WITH_USER","userid","SHOW_SETTINGS","PREFERENCES_UPDATED","preferences","filteredPreferences","preference","type","enterToSendPreference","value","registerEventListeners","path","markDrawerReady"],"mappings":"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"}